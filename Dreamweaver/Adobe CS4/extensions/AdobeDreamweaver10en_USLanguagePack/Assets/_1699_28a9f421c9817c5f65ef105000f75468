<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--#config errmsg="" --><!-- saved from url=(0022)http://help.adobe.com/ -->
<html lang="en-us">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
        <meta name="lang" content="en-us" />
        <meta name="area" content="livedocs" />
        <title>Dreamweaver CS4 * Create an HTML form</title>
        <meta name="product" content="$product" />
        <meta name="productv" content="" />
        <meta name="keywords" content="" />
        <script type="text/javascript" language="Javascript" charset="UTF-8"><!--[CDATA[
        var currentTreeNode = "WS68FB36A1-4EDF-4777-B4AE-EDBFEFABD995.html";
// ]]--></script>
<script src="terms.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="help.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script>  <script src="utilities.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="event.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="treeview.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="toc.js" language="Javascript" type="text/javascript" charset="UTF-8">..</script> 
<script type="text/javascript">
<!--[CDATA[
var headId = document.getElementsByTagName("head")[0];         
if (use_ie_6_behavior) {
    var linkId = document.createElement("link");
    linkId.href = "content-ie6.css";
    linkId.rel = "stylesheet";
    linkId.type = "text/css";
    headId.appendChild(linkId);
}
// ]]-->
</script>
<!--#include virtual="/livedocs/ssi/globalheader.ssi" -->
        <link rel="stylesheet" type="text/css" href="tree.css" />
        <link rel="stylesheet" type="text/css" href="content-fonts.css" />
        <link rel="stylesheet" type="text/css" href="content-hyperlinks.css" />
        <link rel="stylesheet" type="text/css" href="content.css" />
        <link rel="stylesheet" type="text/css" href="localeSpecific.css" />
    </head>
    <body id="content_body" onload="window.focus();">
        <a name="top"></a><div id="mnemonic">
            <div class="Dreamweaver"><table><tr><td class="banner">Dreamweaver CS4</td><td class="pod"><img src="images/PDF.gif" width="16" height="16" hspace="15" valign="50%" />&#160;&#160;
                     <a title="PDF" href="http://help.adobe.com/en_US/Dreamweaver/10.0_Using/dreamweaver_cs4_help.pdf">
                         PDF (adobe.com) 
                    </a></td></tr></table></div>
        </div>
        <div id="searchbar">
<!-- BEGIN SEARCH CONTENT -->
            <form class="search_form" id="search" name="search" action="search.html" target="_self">
                <img src="images/search.png" />
<script type="text/javascript">
<!--[CDATA[
function clearSearch(){
    if (document.search.q.value == terms_AHV_SEARCH_BUTTON){document.search.q.value = ""}; 
}
document.write('<input class=\"search_input\" \
        name=\"q\" \
        id=\"q\" \
        type=\"text\" \
        maxlength=\"256\" \
        value=\"' + terms_AHV_SEARCH_BUTTON + '\" onclick=\"clearSearch()\"><\/input>'); 
// ]]-->


</script> 
            </form>
        </div>
<!-- BEGIN PAGE CONTENT WRAPPER -->
        <div id="page_content_wrapper">
<!-- BEGIN PAGE WRAPPER -->
<table id="page_content_table">
<tr>
<td id="col1">
<!-- BEGIN IONCOMMENTCOUNT -->
            <div id="ionComCount">
            </div>
<!-- END IONCOMMENTCOUNT -->
<!-- BEGIN GROUP TOC WRAPPER -->
            <div id="group_toc"><p>Dreamweaver CS4 Resources</p><ul><li><p><a href="../../Dreamweaver/10.0/index.html" target="_blank">Using
Dreamweaver CS4</a></p>
</li><li><p><a href="http://help.adobe.com/en_US/Dreamweaver/10.0_Extending/index.html" target="_blank">Extending Dreamweaver CS4 (adobe.com)</a></p>
</li><li><p><a href="http://help.adobe.com/en_US/Dreamweaver/10.0_API_Ref/index.html" target="_blank">Dreamweaver API Reference (adobe.com)</a></p>
</li></ul></div>
<!-- END GROUP TOC WRAPPER -->
<!-- BEGIN NAV WRAPPER -->
            <div id="group_toc">
<script type="text/javascript">
<!--[CDATA[
if ( typeof(terms_BOOK_SHORT) != 'undefined' ) {
  document.write("<p>" + terms_BOOK_SHORT + "<\/p>");
}
// ]]-->


</script> 
            </div>
            <div id="nav_content">
            </div>
<!-- END NAV WRAPPER -->
</td>
<td id="col2">
<!-- BEGIN CONTENT WRAPPER -->
<!-- BEGIN BREADCRUMBS -->
            
            <div id="breadcrumb">
                
<ul class="navigation"><li class="prev"><a accesskey="p" class="prev" href="WSE35ED0D3-BCF9-4156-9279-A11284369A07.html" title="Form objects"><img src="images/blank.gif" alt="Previous" width="17" height="17" /></a></li><li class="next"><a accesskey="n" class="next" href="WSB121A6C0-2254-4f08-9C39-4379316A0E34.html" title="About dynamic form objects"><img src="images/blank.gif" alt="Next" width="17" height="17" /></a></li></ul><div class="hierarchy"><a href="WScbb6b82af5544594822510a94ae8d65-7849a.html">Building forms</a> /
     <a href="WS68FB36A1-4EDF-4777-B4AE-EDBFEFABD995.html"><b>Creating web forms</b></a> 
     </div>

            </div>
<!-- END BREADCRUMBS -->
            <div id="content_wrapper">
<!-- BEGIN PAGE TITLE -->
                <h1>
                    Create an HTML form
                </h1>
<!-- END PAGE TITLE -->
                <br clear="both" /><div id="minitoc"><div class="t"><div class="b"><div class="l"><div class="r"><div class="bl"><div class="br"><div class="tl"><div class="tr"><div><h3>Contents [<a href="#" onclick="return toggleMiniToc('minitoc-links', this);" class="hideLink">Hide</a>]</h3><ul id="minitoc-links"><li><p><a href="#WS9A3A6429-C5ED-400c-8304-17EADE777BDB"><h4 class="topictitle4">Text Field object properties</h4>
</a></p></li><li><p><a href="#WS58A68320-074C-4556-B2B1-D15EF6029881"><h4 class="topictitle4">Button object options</h4>
</a></p></li><li><p><a href="#WS8B404401-13AC-42b0-8D1D-00BDD687F5B4"><h4 class="topictitle4">Check Box object options</h4>
</a></p></li><li><p><a href="#WS67EFB6CC-C765-4538-84BE-36868E379443"><h4 class="topictitle4">Single radio button object options</h4>
</a></p></li><li><p><a href="#WS0B99E3DD-93AA-433a-BACC-82EC5CD0460F"><h4 class="topictitle4">Menu options</h4>
</a></p></li><li><p><a href="#WSB72E03CB-4D82-486e-9C0F-CDBAB31702E1"><h4 class="topictitle4">Insert file-upload fields</h4>
</a></p></li><li><p><a href="#WS1A5912EB-46F6-4964-BDC6-F95E83E666D9"><h4 class="topictitle4">Insert an image button</h4>
</a></p></li><li><p><a href="#WSC98C4532-1B45-4916-9FC6-8F48A133598E"><h4 class="topictitle4">Hidden field object options</h4>
</a></p></li><li><p><a href="#WS1B95B02D-672C-4a9b-9A58-BB10F92A3381"><h4 class="topictitle4">Insert a group of radio buttons</h4>
</a></p></li><li><p><a href="#WSE291AB1A-7A08-42c2-A6C9-4019D7EFA3EE"><h4 class="topictitle4">Insert a group of check boxes</h4>
</a></p></li></ul></div></div><br clear="both" /></div></div></div></div></div></div></div></div><br clear="both" /><div><ol><li class="stepexpand"><span>Open a page and place the insertion
point where you want the form to appear.</span></li>
<li class="stepexpand"><span>Select Insert&#160;&gt; Form, or select the Forms
category in the Insert panel and click the Form icon.</span> <p>In Design view, forms are indicated by a dotted red outline.
If you don’t see this outline, select View&#160;&gt; Visual
Aids&#160;&gt; Invisible Elements.</p>
</li>
<li class="stepexpand"><span>Set the properties of the HTML form in the Property inspector (Window&#160;&gt;Properties):</span><ol type="a"><li class="substepexpand"><span>In the Document window, click the form outline
to select the form.</span></li>
<li class="substepexpand"><span>In the Form Name box, type a unique name to identify
the form. </span> <p>Naming a form makes it possible to reference or control
the form with a scripting language, such as JavaScript or VBScript.
If you do not name the form, Dreamweaver generates
a name using the syntax <samp class="codeph">formn</samp>, and increments the value
of <samp class="codeph"><var class="varname">n</var></samp> for each form added to
the page.</p>
</li>
<li class="substepexpand"><span>In the Action box, specify the page or script that
will process the form data by typing the path, or clicking the folder
icon to navigate to the appropriate page or script. Example: processorder.php.</span></li>
<li class="substepexpand"><span>In the Method pop‑up menu, specify the method to transmit
the form data to the server. Set any of the following options:</span> <dl><dt class="dlterm">Default</dt>
<dd>Uses the browser’s default setting to send the form data
to the server. Typically, the default value is the <samp class="codeph">GET</samp> method.</dd><p class="dlseparator"></p><dt class="dlterm">GET</dt>
<dd>Appends the value to the URL requesting the page.</dd><p class="dlseparator"></p><dt class="dlterm">POST</dt>
<dd>Embeds the form data in the HTTP request.</dd><p class="dlseparator"></p></dl>
 <p>Do not use the <samp class="codeph">GET</samp> method to send long
forms. URLs are limited to 8192 characters. If the amount of data
sent is too large, data will be truncated, leading to unexpected
or failed processing results. </p>
<p>Dynamic pages generated by
parameters passed by the <samp class="codeph">GET</samp> method can be bookmarked
because all the values needed to regenerate the page are contained
in the URL displayed in the browser’s Address box. In contrast, dynamic
pages generated by parameters passed by the <samp class="codeph">POST</samp> method
cannot be bookmarked.</p>
<p>If you collect confidential user names
and passwords, credit card numbers, or other confidential information,
the <samp class="codeph">POST</samp> method may appear more secure than the <samp class="codeph">GET</samp> method.
However, the information sent by the <samp class="codeph">POST</samp> method
is not encrypted and can easily be retrieved by a hacker. To ensure
security, use a secure connection to a secure server.</p>
</li>
<li class="substepexpand"><span>(Optional) In the Enctype pop‑up menu, specify the
MIME encoding type of the data submitted to the server for processing. </span> <p>The default setting of <samp class="codeph">application/x-www-form-urlencode </samp>is
typically used in conjunction with the <samp class="codeph">POST </samp>method.
If you are creating a file-upload field, specify the <samp class="codeph">multipart/form‑data</samp> MIME
type.</p>
</li>
<li class="substepexpand"><span>(Optional) In the Target pop‑up menu, specify the
window in which to display the data returned by the invoked program.</span> <p>If the named window is not already open, a new window with
that name opens. Set any of the following target values: </p>
<dl><dt class="dlterm">_blank</dt>
<dd>Opens the destination document in a new unnamed window. </dd><p class="dlseparator"></p><dt class="dlterm">_parent</dt>
<dd>Opens the destination document in the parent window of the
one displaying the current document. </dd><p class="dlseparator"></p><dt class="dlterm">_self</dt>
<dd>Opens the destination document in the same window as the
one in which the form was submitted. </dd><p class="dlseparator"></p><dt class="dlterm">_top</dt>
<dd>Opens the destination document in the body of the current
window. This value can be used to ensure that the destination document
takes over the full window even if the original document was displayed
in a frame.</dd><p class="dlseparator"></p></dl>
</li>
</ol>
</li>
<li class="stepexpand"><span>Insert form objects in the page:</span><ol type="a"><li class="substepexpand"><span>Place the insertion point where the form
object should appear in the form.</span></li>
<li class="substepexpand"><span>Select the object in the Insert&#160;&gt; Form
menu, or in the Forms category of the Insert panel.</span></li>
<li class="substepexpand"><span>Set the properties of the objects.</span></li>
<li class="substepexpand"><span>Enter a name for the object in the Property inspector. </span> <p>Every text field, hidden field, check box, and list/menu
object must have a unique name that identifies the object in the
form. Form object names cannot contain spaces or special characters.
You can use any combination of alphanumeric characters and an underscore
(_). The label you assign to the object is the variable name that
stores the value (the entered data) of the field. This is the value
sent to the server for processing.</p>
<div class="note"><span class="notetitle">Note:  </span>All radio buttons in
a group must have the same name.</div>
</li>
<li class="substepexpand"><span>To label the text field, check box, or radio button
object on the page, click beside the object and type the label.</span></li>
</ol>
</li>
<li class="stepexpand"><span>Adjust the layout of the form.</span> <p>Use line breaks, paragraph breaks, preformatted text, or
tables to format your forms. You cannot insert a form in another
form (that is, you cannot overlap tags), but you can include more
than one form in a page.</p>
<p>When designing forms, remember to
label the form fields with descriptive text to let users know what
they’re responding to—for example, “Type your name” to request name
information.</p>
<p>Use tables to provide structure for form objects
and field labels. When using tables in forms make sure all the <samp class="codeph">table</samp> tags
are included between the <samp class="codeph">form</samp> tags.</p>
</li>
</ol>
<div class="section"><p>For a tutorial on creating forms, see <a href="http://www.adobe.com/go/vid0160" target="_blank">www.adobe.com/go/vid0160</a>.</p>
<p>For
a tutorial on styling forms with CSS, see <a href="http://www.adobe.com/go/vid0161" target="_blank">www.adobe.com/go/vid0161</a>.</p>
</div>
</div>
<div id="WS9A3A6429-C5ED-400c-8304-17EADE777BDB" class="nochunk"><a name="WS9A3A6429-C5ED-400c-8304-17EADE777BDB"></a><h3 class="topictitle3">Text Field object properties</h3><div><div class="section"><p>Select the text field object, and set any of
the following options in the Property inspector:</p>
<dl><dt class="dlterm">Char Width</dt>
<dd>Specifies the maximum number of characters that can be displayed in
the field. This number can be less than Max Chars, which specifies
the maximum number of characters that can be entered in the field.
For example, if the Char Width is set to 20 (the default value)
and a user enters 100 characters, only 20 of those characters will
be viewable in the text field. Although you cannot view the characters
in the field, they are recognized by the field object and are sent
to the server for processing.</dd><p class="dlseparator"></p><dt class="dlterm">Max Chars</dt>
<dd>Specifies the maximum number of characters that the user
can enter in the field for single-line text fields. Use Max Chars
to limit zip codes to 5 digits, limit passwords to 10 characters,
and so on. If you leave the Max Chars box blank, users can enter
any amount of text. If the text exceeds the character width of the field
the text will scroll. If a user exceeds the maximum number of characters,
the form produces an alert sound.</dd><p class="dlseparator"></p><dt class="dlterm">Num Lines</dt>
<dd>(Available when the Multiline option is selected) Sets the
height of the field for multiple-line text fields.</dd><p class="dlseparator"></p><dt class="dlterm">Wrap</dt>
<dd>(Available when the Multiline option is selected) Specifies
how the user’s input will be displayed when the user enters more
information than can be displayed within the defined text area.
The wrap options are as follows:<dl><dt class="dlterm">Off or Default</dt>
<dd>Prevents text from wrapping to the next line. When the user’s input
exceeds the right boundary of the text area, text scrolls toward
the left. Users must press Return to move the insertion point to
the next line in the text area.</dd><p class="dlseparator"></p><dt class="dlterm">Virtual</dt>
<dd>Sets word wrap in the text area. When the user’s input exceeds
the right boundary of the text area, text wraps to the next line.
When data is submitted for processing, word wrap isn’t applied to
the data. It is submitted as one string of data.</dd><p class="dlseparator"></p><dt class="dlterm">Physical</dt>
<dd>Sets word wrap in the text area, as well as to the data when
it is submitted for processing.</dd><p class="dlseparator"></p></dl>
</dd><p class="dlseparator"></p><dt class="dlterm">Type</dt>
<dd>Designates the field as a single-line, multiple-line, or
password field.<dl><dt class="dlterm">Single-line</dt>
<dd>Results in an <samp class="codeph">input</samp> tag with its <samp class="codeph">type</samp> attribute
set to <samp class="codeph">text</samp>. The Char Width setting maps to the <samp class="codeph">size</samp> attribute,
and the Max Chars setting maps to the <samp class="codeph">maxlength</samp> attribute.</dd><p class="dlseparator"></p><dt class="dlterm">Multi-line</dt>
<dd> Results in a <samp class="codeph">textarea</samp> tag. The Char Width
setting maps to the <samp class="codeph">cols</samp> attribute, and the Num
Lines setting maps to the <samp class="codeph">rows</samp> attribute.</dd><p class="dlseparator"></p><dt class="dlterm">Password</dt>
<dd> Results in an <samp class="codeph">input</samp> tag with its <samp class="codeph">type</samp> attribute
set to <samp class="codeph">password</samp>. The Char Width and Max Chars settings
map to the same attributes as in single-line text fields. When a
user types in a password text field, the input appears as bullets
or asterisks to protect it from observation by others.</dd><p class="dlseparator"></p></dl>
</dd><p class="dlseparator"></p><dt class="dlterm">Init val</dt>
<dd>Assigns the value displayed in the field when the form first
loads. For example, you might indicate that the user enters information
in the field by including a note or example value.</dd><p class="dlseparator"></p><dt class="dlterm">Class</dt>
<dd>Lets you apply CSS rules to the object.</dd><p class="dlseparator"></p></dl>
</div>
</div></div>
<div id="WS58A68320-074C-4556-B2B1-D15EF6029881" class="nochunk"><a name="WS58A68320-074C-4556-B2B1-D15EF6029881"></a><h3 class="topictitle3">Button object options</h3><div><div class="section"><dl><dt class="dlterm">Button Name</dt>
<dd>Assigns a name to the button. Two reserved names, Submit
and Reset, tell the form to submit the form data to the processing
application or script, or to reset all the form fields to their
original values, respectively.</dd><p class="dlseparator"></p><dt class="dlterm">Value</dt>
<dd>Determines the text that appears on the button.</dd><p class="dlseparator"></p><dt class="dlterm">Action</dt>
<dd>Determines what happens when the button is clicked. <dl><dt class="dlterm">Submit Form</dt>
<dd>Submits the form data for processing when the user clicks
the button. The data is submitted to the page or script specified
in the form’s Action property. </dd><p class="dlseparator"></p><dt class="dlterm">Reset Form</dt>
<dd> Clears the contents of the form when the button is clicked.</dd><p class="dlseparator"></p><dt class="dlterm">None</dt>
<dd> Specifies the action to be performed when the button is
clicked. For example, you can add a JavaScript behavior that opens
another page when the user clicks the button.</dd><p class="dlseparator"></p></dl>
</dd><p class="dlseparator"></p><dt class="dlterm">Class</dt>
<dd>Applies CSS rules to the object.</dd><p class="dlseparator"></p></dl>
</div>
</div></div>
<div id="WS8B404401-13AC-42b0-8D1D-00BDD687F5B4" class="nochunk"><a name="WS8B404401-13AC-42b0-8D1D-00BDD687F5B4"></a><h3 class="topictitle3">Check Box object options</h3><div><div class="section"><dl><dt class="dlterm">Checked Value</dt>
<dd>Sets the value to be sent to the server when the check box
is checked. For example, in a survey you might set a value of 4
for strongly agree and a value of 1 for strongly disagree. </dd><p class="dlseparator"></p><dt class="dlterm">Initial State</dt>
<dd>Determines whether the check box is selected when the form
loads in the browser.</dd><p class="dlseparator"></p><dt class="dlterm">Dynamic</dt>
<dd>Lets the server dynamically determine the initial state of
the check box. For example, you can use check boxes to visually
present the Yes/No information stored in a database record. At design
time, you don’t know that information. At run time the server reads
the database record and selects the check box if the value is Yes. </dd><p class="dlseparator"></p><dt class="dlterm">Class</dt>
<dd>Applies Cascading Style Sheets (CSS) rules to the object.</dd><p class="dlseparator"></p></dl>
</div>
</div></div>
<div id="WS67EFB6CC-C765-4538-84BE-36868E379443" class="nochunk"><a name="WS67EFB6CC-C765-4538-84BE-36868E379443"></a><h3 class="topictitle3">Single radio button object options</h3><div><div class="section"><dl><dt class="dlterm">Checked Value</dt>
<dd>Sets the value to be sent to the server when the radio button
is selected. For example, you might type <samp class="codeph"><kbd class="userinput">skiing</kbd></samp> in
the Checked Value box to indicate a user chose skiing.</dd><p class="dlseparator"></p><dt class="dlterm">Initial State</dt>
<dd>Determines whether the radio button is selected when the
form loads in the browser.</dd><p class="dlseparator"></p><dt class="dlterm">Dynamic</dt>
<dd>Lets the server dynamically determine the initial state of
the radio button. For example, you can use radio buttons to visually
present information stored in a database record. At design time,
you don’t know that information. At run time the server reads the
database record and checks the radio button if the value matches
one you specified.</dd><p class="dlseparator"></p><dt class="dlterm">Class</dt>
<dd>Applies CSS rules to the object.</dd><p class="dlseparator"></p></dl>
</div>
</div></div>
<div id="WS0B99E3DD-93AA-433a-BACC-82EC5CD0460F" class="nochunk"><a name="WS0B99E3DD-93AA-433a-BACC-82EC5CD0460F"></a><h3 class="topictitle3">Menu options</h3><div><div class="section"><dl><dt class="dlterm">List/Menu</dt>
<dd>Assigns a name to the menu. The name must be unique.</dd><p class="dlseparator"></p><dt class="dlterm">Type</dt>
<dd>Indicates whether the menu drops down when clicked (the Menu
option) or displays a scrollable list of items (the List option).
Select the Menu option if you want only one option to be visible
when the form is displayed in a browser. To display the other choices,
the user must click the down arrow.<p>Select the List option
to list some or all the options when the form is displayed in a
browser, to let users select multiple items.</p>
</dd><p class="dlseparator"></p><dt class="dlterm">Height</dt>
<dd>(List type only) Sets the number of items displayed in the
menu.</dd><p class="dlseparator"></p><dt class="dlterm">Selections</dt>
<dd>(List type only) Indicates whether the user can select multiple
items from the list.</dd><p class="dlseparator"></p><dt class="dlterm">List Values</dt>
<dd>Opens a dialog box that lets you add the items to a form
menu:<div class="para"><ol><li><p>Use the Plus (+) and Minus (–) buttons to
add and remove items in the list.</p>
</li>
<li><p>Enter label text and an optional value for each menu item.</p>
<p>Each
item in the list has a label (the text that appears in the list)
and a value (the value that is sent to the processing application
if the item is selected). If no value is specified, the label is
sent to the processing application instead.</p>
</li>
<li><p>Use the up and down arrow buttons to rearrange items in the
list.</p>
<p>Items appear in the menu in the same order as they appear
in the List Values dialog box. The first item on the list is the
selected item when the page is loaded in a browser.</p>
</li>
</ol>
</div>
</dd><p class="dlseparator"></p><dt class="dlterm">Dynamic</dt>
<dd>Lets the server dynamically select an item in the menu when
it is first displayed. </dd><p class="dlseparator"></p><dt class="dlterm">Class</dt>
<dd>Lets you apply CSS rules to the object.</dd><p class="dlseparator"></p><dt class="dlterm">Initially Selected</dt>
<dd>Sets the items selected in the list by default. Click the
item or items in the list. </dd><p class="dlseparator"></p></dl>
</div>
</div></div>
<div id="WSB72E03CB-4D82-486e-9C0F-CDBAB31702E1" class="nochunk"><a name="WSB72E03CB-4D82-486e-9C0F-CDBAB31702E1"></a><h3 class="topictitle3">Insert file-upload fields</h3><div><div class="section"><p>You can create a file-upload field that lets
users select a file on their computer—such as a word processing
document or graphics file—and upload the file to the server. A file
field looks like other text fields except it also contains a Browse button.
The user either manually enters the path to the file they want to
upload, or uses the Browse button to locate and select the file.</p>
<p>Before
you can use file-upload fields, you must have a server-side script
or a page capable of handling file submissions. Consult the documentation
of the server technology you use to process form data. For example,
if you use PHP, see “Handling files uploads” in the online PHP Manual
at <a href="http://us2.php.net/manual/en/features.file-upload.php" target="_blank">http://us2.php.net/features.file-upload.php</a>.</p>
<p>File
fields require that you use the <samp class="codeph">POST</samp> method to
transmit files from the browser to the server. The file is posted
to the address you specify in the form’s Action box.</p>
<div class="note"><span class="notetitle">Note:  </span>Contact
your server’s administrator to confirm that anonymous file uploads are
allowed before using the file field.</div>
</div>
<ol><li class="stepexpand"><span>Insert a form in the page (Insert&#160;&gt;
Form).</span></li>
<li class="stepexpand"><span>Select the form to display its Property inspector.</span></li>
<li class="stepexpand"><span>Set the form Method to <samp class="codeph">POST</samp>.</span></li>
<li class="stepexpand"><span>From the Enctype pop‑up menu, select <samp class="codeph">multipart/form-data</samp>.</span></li>
<li class="stepexpand"><span>In the Action box, specify the server-side script or
page capable of handling the uploaded file.</span></li>
<li class="stepexpand"><span>Place the insertion point inside the form outline, and
select Insert&#160;&gt; Form&#160;&gt; File Field.</span></li>
<li class="stepexpand"><span>Set any of the following options in the Property inspector:</span> <dl><dt class="dlterm">File Field Name</dt>
<dd>Specifies the name for the file field object. </dd><p class="dlseparator"></p><dt class="dlterm">Char Width</dt>
<dd>Specifies the maximum number of characters that can be
displayed in the field.</dd><p class="dlseparator"></p><dt class="dlterm">Max Chars</dt>
<dd>Specifies the maximum number of characters the field
will hold. If the user browses to locate the file, the filename
and path can exceed the specified Max Chars value. However, if the
user attempts to type in the filename and path, the file field will
only allow the number of characters specified by the Max Chars value.</dd><p class="dlseparator"></p></dl>
</li>
</ol>
</div></div>
<div id="WS1A5912EB-46F6-4964-BDC6-F95E83E666D9" class="nochunk"><a name="WS1A5912EB-46F6-4964-BDC6-F95E83E666D9"></a><h3 class="topictitle3">Insert an image button</h3><div><div class="section"><p>You can use images as button icons. Using
an image to perform tasks other than submitting data requires attaching
a behavior to the form object. </p>
</div>
<ol><li class="stepexpand"><span>In the document, place the insertion point inside
the form outline.</span></li>
<li class="stepexpand"><span>Select Insert&#160;&gt; Form&#160;&gt; Image
Field.</span> <p>The Select Image Source dialog box appears.</p>
</li>
<li class="stepexpand"><span>Select the image for the button in the Select Image Source
dialog box, and click OK.</span></li>
<li class="stepexpand"><span>Set any of the following options in the Property inspector:</span> <dl><dt class="dlterm">ImageField</dt>
<dd>Assigns a name to the button. Two reserved names, Submit
and Reset, tell the form to submit the form data to the processing
application or script, or to reset all the form fields to their
original values, respectively.</dd><p class="dlseparator"></p><dt class="dlterm">Src</dt>
<dd>Specifies the image you want to use for the button.</dd><p class="dlseparator"></p><dt class="dlterm">Alt</dt>
<dd>Lets you enter descriptive text in case the image fails
to load in the browser.</dd><p class="dlseparator"></p><dt class="dlterm">Align</dt>
<dd>Sets the align attribute of the object.</dd><p class="dlseparator"></p><dt class="dlterm">Edit Image</dt>
<dd>Starts your default image editor and opens the image
file for editing.</dd><p class="dlseparator"></p><dt class="dlterm">Class</dt>
<dd>Lets you apply CSS rules to the object.</dd><p class="dlseparator"></p></dl>
</li>
<li class="stepexpand"><span>To attach a JavaScript behavior to the button, select
the image, and then select the behavior in the Behaviors panel (Window&#160;&gt;
Behaviors). </span></li>
</ol>
</div></div>
<div id="WSC98C4532-1B45-4916-9FC6-8F48A133598E" class="nochunk"><a name="WSC98C4532-1B45-4916-9FC6-8F48A133598E"></a><h3 class="topictitle3">Hidden field object options</h3><div><div class="section"><dl><dt class="dlterm">HiddenField</dt>
<dd>Specifies the name for the field.</dd><p class="dlseparator"></p><dt class="dlterm">Value</dt>
<dd>Assigns a value to the field. This value is passed to the
server when the form is submitted.</dd><p class="dlseparator"></p></dl>
</div>
</div></div>
<div id="WS1B95B02D-672C-4a9b-9A58-BB10F92A3381" class="nochunk"><a name="WS1B95B02D-672C-4a9b-9A58-BB10F92A3381"></a><h3 class="topictitle3">Insert a group of radio buttons</h3><div><ol><li class="stepexpand"><span>Place the insertion point inside the
form outline.</span></li>
<li class="stepexpand"><span>Select Insert&#160;&gt; Form&#160;&gt; Radio
Group.</span></li>
<li class="stepexpand"><span>Complete the dialog box and click OK. </span><ol type="a"><li class="substepexpand"><span>In the Name box, enter a name for the radio
button group.</span> <p>If you set the radio buttons to pass parameters back to
the server, the parameters are associated with the name. For example,
if you name the group <samp class="codeph">myGroup</samp> and set the form
method to <samp class="codeph">GET </samp>(that is, you want the form to pass
URL parameters instead of form parameters when the user clicks the
submit button), the expression <samp class="codeph">myGroup=”</samp><samp class="codeph"><var class="varname">CheckedValue</var></samp><samp class="codeph">”</samp> is
passed in the URL to the server.</p>
</li>
<li class="substepexpand"><span>Click the Plus (+) button to add a radio button to
the group. Enter a label and checked value for the new button.</span></li>
<li class="substepexpand"><span>Click the up or down arrows to reorder the buttons.</span></li>
<li class="substepexpand"><span>To set a particular radio button to be selected when
the page opens in a browser, enter a value equal to the radio button’s
value in the Select Value Equal To box.</span> <p>Enter a static value or specify a dynamic one by clicking
the lightning bolt icon beside the box and selecting a recordset
that contains possible checked values. In either case, the value
you specify should match the checked value of one of the radio buttons
in the group. To view the checked values of the radio buttons, select
each radio button and open its Property inspector (Window&#160;&gt;
Properties).</p>
</li>
<li class="substepexpand"><span>Select the format in which you want Dreamweaver to lay out the buttons.</span> <p>Lay out the buttons using line breaks or a table. If you
select the table option, Dreamweaver creates
a single-column table, and places the radio buttons on the left
and the labels on the right. </p>
</li>
</ol>
 <p>You can also set the properties in the Property inspector
or directly in Code view.</p>
</li>
</ol>
</div></div>
<div id="WSE291AB1A-7A08-42c2-A6C9-4019D7EFA3EE" class="nochunk"><a name="WSE291AB1A-7A08-42c2-A6C9-4019D7EFA3EE"></a><h3 class="topictitle3">Insert a group of check boxes</h3><div><ol><li class="stepexpand"><span>Place the insertion point inside the
form outline.</span></li>
<li class="stepexpand"><span>Select Insert&#160;&gt; Form&#160;&gt; Checkbox
Group.</span></li>
<li class="stepexpand"><span>Complete the dialog box and click OK. </span><ol type="a"><li class="substepexpand"><span>In the Name box, enter a name for the check
box group.</span> <p>If you set the check boxes to pass parameters back to the
server, the parameters are associated with the name. For example,
if you name the group <samp class="codeph">myGroup</samp> and set the form
method to <samp class="codeph">GET </samp>(that is, you want the form to pass
URL parameters instead of form parameters when the user clicks the
submit button), the expression <samp class="codeph">myGroup=”</samp><samp class="codeph"><var class="varname">CheckedValue</var></samp><samp class="codeph">”</samp> is
passed in the URL to the server.</p>
</li>
<li class="substepexpand"><span>Click the Plus (+) button to add a check box to the
group. Enter a label and checked value for the new check box.</span></li>
<li class="substepexpand"><span>Click the up or down arrows to reorder the check boxes.</span></li>
<li class="substepexpand"><span>To set a particular check box to be selected when
the page opens in a browser, enter a value equal to the check box’s
value in the Select Value Equal To box.</span> <p>Enter a static value or specify a dynamic one by clicking
the lightning bolt icon beside the box and selecting a recordset
that contains possible checked values. In either case, the value
you specify should match the checked value of one of the check boxes
in the group. To view the checked values of the check boxes, select each
check boxand open its Property inspector (Window&#160;&gt; Properties).</p>
</li>
<li class="substepexpand"><span>Select the format in which you want Dreamweaver to lay out the check boxes.</span> <p>Lay out the check boxes using line breaks or a table. If
you select the table option, Dreamweaver creates
a single-column table, and places the check boxes on the left and
the labels on the right. </p>
</li>
</ol>
 <p>You can also set the properties in the Property inspector
or directly in Code view.</p>
</li>
</ol>
</div></div>

                <div id="related">
                    <div class="separator">&#160;</div>
                    <div><p>&#160;<a href="WSc78c5058ca073340dcda9110b1f693f21-79cda.html">Collecting information from users</a></p><p>&#160;<a href="WSc78c5058ca073340dcda9110b1f693f21-7996a.html">Define form parameters</a></p><p>&#160;<a href="WSc78c5058ca073340dcda9110b1f693f21-7997a.html">Define URL parameters</a></p><p>&#160;<a href="WS43C5848E-053E-4f12-9914-C93FC2476F1Da.html">Building ColdFusion forms</a></p><p>&#160;<a href="WS2442184F-3DF4-4240-96AF-CC6D792E2A62a.html">Building Spry pages visually</a></p>
</div>
                    <p><a href="http://www.adobe.com/go/vid0160" title="http://www.adobe.com/go/vid0160">Creating forms tutorial (adobe.com)</a></p><p><a href="http://www.adobe.com/go/vid0161" title="http://www.adobe.com/go/vid0161">Styling forms tutorial (adobe.com)</a></p>
                </div>
                <div id="footer">
                    <p><img src="images/Community.png" />&#160;<a title="community help (adobe.com)" href="http://www.adobe.com/go/lr_Dreamweaver_community_en">community help (adobe.com)</a></p>
<!-- BEGIN IONCOMMENTS -->
                    <div id="ionComHere">
                    </div>
<!-- END IONCOMMENTS -->
<!--#include virtual="ionComments.ssi" -->
                    <p id="creativecommons"><a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" id="creativecommons_text"><img id="creativecommons_img" src="images/CC.png" alt="This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License" /></a></p>
                </div>
            </div>
<!-- END CONTENT WRAPPER -->
</td>
</tr>
</table>
        </div>
<!-- END PAGE CONTENT WRAPPER -->
<script type="text/javascript">
<!--[CDATA[
scrollToNameAnchor();
// ]]-->
</script> 
<!--#include virtual="/livedocs/ssi/globalfooter.ssi" -->
<!--#include virtual="/ubi/analytics/analytics_ssi.html" -->
    </body>
</html>