<html>
<head>


<title>&lt;xsl:value-of&gt;</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">
<div id="Description">
<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
<tr>
<td valign="top" class="NAME">&lt;xsl:value-of&gt;</td>
<td valign="top" class="COMPATIBILITY">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
</tr>
<tr>
<td valign="top" colspan="2" class="description">
Calcule la valeur d'une expression XPath, convertit cette valeur en cha&icirc;ne, puis &eacute;crit la valeur dans l'arborescence de r&eacute;sultat.</td></tr>
<tr>
<td colspan="2" class="CLEARSEPARATION">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="TITLE">Cat&eacute;gorie</td>
</tr>
<tr>
<td colspan="2" class="description">
<p>Instruction</p>
</td>
</tr>
<tr>
<td colspan="2" class="CLEARSEPARATION">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="TITLE">Attributs obligatoires</td>
</tr>
<tr>
<td colspan="2" class="description">
<dl>
<dt>
select
</dt>
<dd>
L'expression XPath qui est &eacute;valu&eacute;e et &eacute;crite dans le document de sortie.
<P></p>
</dl>
</td>
</tr>
<tr>
<td colspan="2" class="CLEARSEPARATION">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="TITLE">Attributs facultatifs</td>
</tr>
<tr>
<td colspan="2" class="description">
<dl>
<dt>
disable-output-escaping
</dt>
<dd>
Un attribut qui d&eacute;finit si des caract&egrave;res sp&eacute;ciaux sont &eacute;chapp&eacute;s lors de leur &eacute;criture dans le document de sortie. Par exemple, si le texte litt&eacute;ral contient le caract&egrave;re <span class="LITERAL">&gt;</span>, il est g&eacute;n&eacute;ralement &eacute;crit dans le document de sortie sous la forme <span class="LITERAL">&amp; gt;</span>. Si vous codez <span class="LITERAL">disable-output-escaping= &quot; yes &quot;</span>, le caract&egrave;re <span class="LITERAL">&gt;</span> est &eacute;crit &agrave; la place. Le processeur XSLT utilise cet attribut uniquement si les m&eacute;thodes de sortie <span class="LITERAL">html</span> ou <span class="LITERAL">xml</span> sont utilis&eacute;es. Si vous utilisez <span class="LITERAL">&lt; xsl:output method= &quot; test &quot; &gt;</span>, l'attribut est ignor&eacute; car la m&eacute;thode de sortie <span class="LITERAL">text</span> ne permet pas d'ignorer une sortie. Voir <xref linkend="text-element">&lt; xsl:text &gt;</xref> pour obtenir de plus amples informations sur l'attribut <span class="LITERAL">disable-output-escaping</span>.
<P></p>
</dl>
</td>
</tr>
<tr>
<td colspan="2" class="CLEARSEPARATION">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="TITLE">Contenu</td>
</tr>
<tr>
<td colspan="2" class="description">
<p>Aucun. <span class="LITERAL">&lt;xsl:value-of&gt;</span> est un &eacute;l&eacute;ment vide.</p>
</td>
</tr>
<tr>
<td colspan="2" class="CLEARSEPARATION">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="TITLE">Appara&icirc;t dans</td>
</tr>
<tr>
<td colspan="2" class="description">
<p><span class="LITERAL">&lt;xsl:value-of&gt;</span> appara&icirc;t dans un mod&egrave;le.</p>
</td>
</tr>
<tr>
<td colspan="2" class="CLEARSEPARATION">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="TITLE">D&eacute;fini dans</td>
</tr>
<tr>
<td colspan="2" class="description">
<p>XSLT section 7.6.1, G&eacute;n&eacute;ration de texte avec <span class="LITERAL">xsl:value-of</span>.</p>
</td>
</tr>
<tr>
<td colspan="2" class="CLEARSEPARATION">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="TITLE">Exemple</td>
</tr>
<tr>
<td colspan="2" class="description">
<p>L'&eacute;l&eacute;ment <span class="LITERAL">&lt;xsl:value-of&gt;</span> a permis de g&eacute;n&eacute;rer du texte. La feuille de style est la suivante&nbsp;:</p>
<span class="PROGRAMLISTING"><pre>
&lt;?xsl version=&quot;1.0&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

  &lt;xsl:output method=&quot;text&quot;/&gt;

  &lt;xsl:variable name=&quot;newline&quot;&gt;
&lt;xsl:text&gt;
&lt;/xsl:text&gt;
  &lt;/xsl:variable&gt;

  &lt;xsl:template match=&quot;/&quot;&gt;
    &lt;xsl:text&gt;Your document contains &lt;/xsl:text&gt;
    &lt;xsl:value-of select=&quot;count(//*)&quot;/&gt;
    &lt;xsl:text&gt; elements and &lt;/xsl:text&gt;
    &lt;xsl:value-of select=&quot;count(//@*)&quot;/&gt;
    &lt;xsl:text&gt; attributes.  &lt;/xsl:text&gt;
    &lt;xsl:value-of select=&quot;$newline&quot;/&gt;
    &lt;xsl:text&gt;Have a great day!&lt;/xsl:text&gt;
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</pre></span>

<p>Le document XML suivant a servi d'entr&eacute;e&nbsp;:</p>

<span class="PROGRAMLISTING"><pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;report&gt;
  &lt;title&gt;Miles Flown in 2001&lt;/title&gt;
  &lt;month sequence=&quot;01&quot;&gt;
    &lt;miles-flown&gt;12379&lt;/miles-flown&gt;
    &lt;miles-earned&gt;35215&lt;/miles-earned&gt;
  &lt;/month&gt;
  &lt;month sequence=&quot;02&quot;&gt;
    &lt;miles-flown&gt;32857&lt;/miles-flown&gt;
    &lt;miles-earned&gt;92731&lt;/miles-earned&gt;
  &lt;/month&gt;
  &lt;month sequence=&quot;03&quot;&gt;
    &lt;miles-flown&gt;19920&lt;/miles-flown&gt;
    &lt;miles-earned&gt;76725&lt;/miles-earned&gt;
  &lt;/month&gt;
  &lt;month sequence=&quot;04&quot;&gt;
    &lt;miles-flown&gt;18903&lt;/miles-flown&gt;
    &lt;miles-earned&gt;31781&lt;/miles-earned&gt;
  &lt;/month&gt;
&lt;/report&gt;</pre></span>

<p>Les r&eacute;sultats sont les suivants&nbsp;:</p>
<span class="PROGRAMLISTING"><pre>
Your document contains 14 elements and 4 attributes.
Have a great day!</pre></span>
</td>
</tr>
</table>
</div>
</body>
</html>
