<html>
<link rel="stylesheet" href="josh.css">
<body bgcolor="#FFFFFF">

		<div id="Description">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">NodeList</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span>  IE <span class="emphasis">5</span>  DOM <span class="emphasis">1</span></td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements"></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description"><p>L&acute;objet <span class="literal">NodeList</span> est une repr&eacute;sentation abstraite dans le DOM W3C d&acute;une collection de noeuds de n&acute;importe quel type. Toute propri&eacute;t&eacute; ou m&eacute;thode du DOM W3C qui renvoie une collection de noeuds renvoie un objet de type <span class="literal">NodeList</span>. Par exemple, la propri&eacute;t&eacute; <span class="literal">childNodes</span> de l&acute;objet <span class="literal">Node</span> et la m&eacute;thode <span class="literal">getElementsByTagName()</span> de l&acute;objet <span class="literal">Element</span> renvoient toutes les deux des objets <span class="literal">NodeList</span>. JavaScript pr&eacute;sente une collection <span class="literal">NodeList</span> comme un tableau dot&eacute; de la propri&eacute;t&eacute; habituelle <span class="literal">length</span>. Les scripts peuvent r&eacute;f&eacute;rencer des &eacute;l&eacute;ments du tableau par le biais d&acute;index de tableaux de nombres entiers (entre crochets) ou de la m&eacute;thode <span class="literal">item()</span> de l&acute;objet <span class="literal">NodeList</span>.
</p>
							</td>
						</tr>
						<tr><td valign="top" colspan="2" class="CLEARSEPARATION">&#160;</td>
						</tr>
						<tr>
							<td colspan="2"><p>Certains types de noeuds ont leurs propres collections (par exemple <span class="literal">NamedNodeMap</span> pour une collection de noeuds d&acute;attributs et <span class="literal">HTMLCollection</span> pour une collection de noeuds d&acute;&eacute;l&eacute;ments HTML). Ces autres objets de collections ont des propri&eacute;t&eacute;s et des m&eacute;thodes suppl&eacute;mentaires qui n&acute;ont un sens que pour les types de noeuds des collections. Par exemple, comme les noeuds de texte (l&acute;un des types d&acute;objet <span class="literal">Node</span> les plus simples) n&acute;ont pas de propri&eacute;t&eacute; pouvant contenir un identificateur, l&acute;objet <span class="literal">NodeList</span> n&acute;inclut pas de m&eacute;thode pour r&eacute;f&eacute;rencer un &eacute;l&eacute;ment par son ID. Mais un objet <span class="literal">HTMLCollection</span> (enti&egrave;rement compos&eacute; de types de noeuds <span class="literal">HTMLElement</span> plus complexes) comprend une autre m&eacute;thode (<span class="literal">namedItem()</span>) qui permet aux scripts de r&eacute;f&eacute;rencer un &eacute;l&eacute;ment par son ID, ainsi que par index de nombres entiers. Les distinctions entre les types d&acute;objets de collections sont vite apparentes lorsque vous comparez les propri&eacute;t&eacute;s et m&eacute;thodes des objets de collections que vous d&eacute;finissez par script (&agrave; titre d&acute;exemple, reportez-vous aux descriptions des objets <span class="literal">attributes</span> et <span class="literal">images</span> dans ce chapitre). La terminologie du DOM W3C, par contre, n&acute;est pas un facteur dans les scripts.
</p>
							</td>
						</tr>
			</table>
		</div>

</body>
</html>